1. What happens when you initialize a repository? Why do you need to do it?

A hidden folder .git is created. This folder contains the necessary files for git.


2. How is the staging area different from the working directory and the repository? What value do you think it offers?

The staging area does not contain all files like the working directory, nor does it contain the commits and history as the repository. Changes made to the 
staging area can be reverted easily.


3. How can you use the staging area to make sure you have one commit per logical change?

In the staging area all added files are listed and the status can be reset.


4. What are some situations when branches would be helpful in keeping your history organized? How would branches help?

When I want to try something new. When a new project is created.


5. How do the diagrams help you visualize the branch structure?

The diagrams shows the different branches like a crossing in a tree.


6. What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

Both features from the branches will be fused into one branch. The diagram shows the integration of both branches.

7. What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?

Pros: Faster commits of simple changes. 
Cons: The user may not really know which changes are made.